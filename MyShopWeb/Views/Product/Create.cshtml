@model CoreMode.ViewModels.ProductFormViewModel

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>


@using (Html.BeginForm("Save", "Product", FormMethod.Post, new { encType = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Product.Name)
            @Html.TextBoxFor(m => m.Product.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Product.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Product.Price)
            @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Product.Price)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Product.Description)
            @Html.TextBoxFor(m => m.Product.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Product.Description)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Product.Category)
            @Html.DropDownListFor(m => m.Product.CategoryId, new SelectList(Model.ProductCategories, "Id", "Name"), new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Product.CategoryId)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Product.Image)
            <div>
                <input type="file" name="Uploadfile" id="Uploadfile" class="form-control" />
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary">
                    儲存結果
                </button>
      
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.Product.Id)
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}